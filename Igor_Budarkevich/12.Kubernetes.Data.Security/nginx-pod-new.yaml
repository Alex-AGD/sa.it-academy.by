---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    user www-data;
    worker_processes auto;
    pid /run/nginx.pid;
    events { }
    http {
    server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root /srv/www;
    index index.php;
    server_name _;
    location ~ \.php$ {
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/var/run/php5-fpm.sock;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    fastcgi_param SCRIPT_NAME $fastcgi_script_name;
    fastcgi_index index.php;
    include fastcgi_params;
    }}}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: app01-pv-claim-app
  labels:
    app: simple-web
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-app
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
  labels:
    app: simple-web
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: simple-web
  template:
    metadata:
      labels:
        app: simple-web
    spec:
      containers:
      - name: nginx
        image: timnn/nginx-php-fpm:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: persistent-storage-app
          mountPath: "/srv/www"
        - name: ssh-keys
          mountPath: "/root/.ssh"
        resources:
          requests:
            cpu: 50m
            memory: 50Mi
          limits:
            cpu: 100m
            memory: 100Mi
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-config
      - name: persistent-storage-app
        persistentVolumeClaim:
          claimName: app01-pv-claim-app
      - name: ssh-keys
        secret:
          secretName: ssh-keys
          defaultMode: 0600
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-web-service
  labels:
    run: web-service
spec:
  ports:
  - port: 80
    protocol: TCP
  selector:
    app: simple-web

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-sa
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/server-alias: "nginx-test.k8s-2.sa"
spec:
  rules:
    - host: nginx.k8s-2.sa
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nginx-web-service
                port:
                  number: 80
