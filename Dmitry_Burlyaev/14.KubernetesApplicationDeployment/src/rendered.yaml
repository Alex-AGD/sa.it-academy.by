rendered.yaml
---
# Source: jenkins/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins
  namespace: "ci-cd"
  labels:
    helm.sh/chart: jenkins-0.1.0
    app.kubernetes.io/name: jenkins
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
automountServiceAccountToken: true
---
# Source: jenkins/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: jenkins-secret
  namespace: ci-cd  # dynamic based on Helm release
type: Opaque
data:
  password: YlhsZmMzUnliMjVuWDNCaGMzTmZNVEl6
---
# Source: jenkins/templates/configmap-tasks.yaml
# templates/configmap-tasks.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-tasks-config
  namespace: ci-cd
  labels:
    helm.sh/chart: jenkins-0.1.0
    app.kubernetes.io/name: jenkins
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.xml: |
      <?xml version='1.1' encoding='UTF-8'?>
      <flow-definition plugin="workflow-job@1460.v28178c1ef6e6">
        <actions>
          <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2214.vb_b_34b_2ea_9b_83"/>
          <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2214.vb_b_34b_2ea_9b_83">
            <jobProperties/>
            <triggers/>
            <parameters/>
            <options/>
          </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
        </actions>
        <description>Pre-configured Jenkins task</description>
        <keepDependencies>false</keepDependencies>
        <properties>
          <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@332.va_1ee476d8f6d">
            <autoRebuild>false</autoRebuild>
            <rebuildDisabled>false</rebuildDisabled>
          </com.sonyericsson.rebuild.RebuildSettings>
        </properties>
        <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3990.vd281dd77a_388">
          <script>pipeline {
        agent {
          kubernetes {
            containerTemplate {
              name 'curl-test'
              image 'pluhin31/wget_curl:latest'
              ttyEnabled true
              command 'sleep 180'
            }
          }
        }
        stages {
          stage('Test') {
            steps {
              container('curl-test') {
                sh """
                  curl --version
                  curl https://onliner.by
                  wget -O - https://onliner.by | egrep "https://[0-9a-z]+[.]onliner[.]by" -o | sort -u > tmp.out
                  cat tmp.out
                  curl $(cat tmp.out) -I | egrep HTTP
                """
              }
            }
          }
        }
      }</script>
          <sandbox>true</sandbox>
        </definition>
        <triggers/>
        <disabled>false</disabled>
      </flow-definition>
---
# Source: jenkins/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: basic-security
  namespace: ci-cd
data:
  basic-security.groovy: |
    #!groovy
    import jenkins.model.*
    import hudson.security.*
    def instance = Jenkins.getInstance()
    println "--> creating local user 'admin'"
    def password = System.getenv("PASS") ?: "bXlfc3Ryb25nX3Bhc3NfMTIz"
    def hudsonRealm = new HudsonPrivateSecurityRealm(false)
    hudsonRealm.createAccount('admin', password)
    instance.setSecurityRealm(hudsonRealm)
    def strategy = new FullControlOnceLoggedInAuthorizationStrategy()
    strategy.setAllowAnonymousRead(true)
    instance.setAuthorizationStrategy(strategy)
    instance.save()
---
# Source: jenkins/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: jenkins-config
  namespace: ci-cd
data:
  jenkins.yaml: |
    jenkins:
      numExecutors: 2
      clouds:
      - kubernetes:
          containerCapStr: "10"
          maxRequestsPerHostStr: "32"
          jenkinsUrl: "http://jenkins:8080"
          name: "kubernetes"
          namespace: "ci-cd"
          skipTlsVerify: true
    credentials:
      system:
        domainCredentials:
        - credentials:
          - usernamePassword:
              description: "Githubuser"
              id: "github-creds"
              password: "adminpassword"
              scope: GLOBAL
              username: "admin"
    unclassified:
      location:
        adminAddress: "fuzzyfox2012@gmail.com"
        url: "http://jenkins.k8s-3.sa/"
      shell:
        shell: "/bin/bash"
---
# Source: jenkins/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: jenkins
  namespace: "ci-cd"
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: jnlp
      port: 50000
      targetPort: 50000
  selector:
    app: jenkins
---
# Source: jenkins/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: "ci-cd"
  labels:
    helm.sh/chart: jenkins-0.1.0
    app.kubernetes.io/name: jenkins
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jenkins
      app.kubernetes.io/instance: jenkins
  template:
    metadata:
      labels:
        helm.sh/chart: jenkins-0.1.0
        app.kubernetes.io/name: jenkins
        app.kubernetes.io/instance: jenkins
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: jenkins
      securityContext:
        {}
      containers:
        - name: jenkins
          securityContext:
            {}
          image: "jfrog.it-academy.by/public/jenkins-ci:burlyaev29"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: jnlp
              containerPort: 50000
              protocol: TCP
          env:
            - name: PASS
              valueFrom:
                secretKeyRef:
                  name: jenkins-secret
                  key: password
            - name: JAVA_OPTS
              value:
          livenessProbe:
            httpGet:
              path: /
              port: http-port
          readinessProbe:
            httpGet:
              path: /
              port: http-port
          resources:
            limits:
              cpu: 3
              memory: 3Gi
            requests:
              cpu: 2
              memory: 2Gi
          volumeMounts:
            - mountPath: /var/jenkins_home/init.groovy.d/basic-security.groovy
              name: jenkins-auth-config
              subPath: basic-security.groovy
            - mountPath: /var/jenkins_home/casc_configs/jenkins.yaml
              name: jenkins-config-yaml
              subPath: jenkins.yaml
            - mountPath: /var/jenkins_home
              name: jenkins-config
      volumes:
        - configMap:
            name: basic-security
          name: jenkins-auth-config
        - configMap:
            name: jenkins-config
          name: jenkins-config-yaml
        - name: jenkins-config
          nfs:
            path: /mnt/IT-Academy/nfs-data/sa2-29-24/burlyaev/jenkins
            server: 192.168.37.105
---
# Source: jenkins/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
#  name: jenkins-jenkins  # Используем fullnameOverride или дефолтное имя
  name: jenkins
  namespace: ci-cd
  labels:
    helm.sh/chart: jenkins-0.1.0
    app.kubernetes.io/name: jenkins
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  ingressClassName: nginx
  rules:
    - host: "jenkins.k8s-3.sa"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jenkins
                port:
                  number: 8080
---
# Source: jenkins/templates/configmap.yaml
# templates/configmap.yaml
---
# Source: jenkins/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "jenkins-test-connection"
  namespace: "ci-cd" # namespace from the release context
  labels:
    helm.sh/chart: jenkins-0.1.0
    app.kubernetes.io/name: jenkins
    app.kubernetes.io/instance: jenkins
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['jenkins:8080']
  restartPolicy: Never